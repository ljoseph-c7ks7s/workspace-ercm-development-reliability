[
    {
        "attrs":{
            "component_config":{
                "age_reset_event":[],
                "consequence":[],
                "interval_end_column":"REMOVAL_Transaction_Date",
                "interval_start_column":"INSTALL_Transaction_Date",
                "location_group":[],
                "object":"Component_Position_Number",
                "object_class":"Work_Unit_Code",
                "object_type":"Work_Unit_Code",
                "operating_time":"TOW",
                "parent_type":"Equipment_Designator",
                "special_repair_event":[],
                "suspension":[
                    {
                        "criteria":[
                            {
                                "field":"REMOVAL_Action_Taken_Code",
                                "is":"T"
                            }
                        ],
                        "name":"CANNIBALIZATION",
                        "require_all":false
                    },
                    {
                        "criteria":[
                            {
                                "field":"REMOVAL_Transaction_Date",
                                "is":null
                            }
                        ],
                        "name":"INSTALLED",
                        "require_all":false
                    },
                    {
                        "criteria":[
                            {
                                "field":"spans_unknown_removal",
                                "is":"1"
                            }
                        ],
                        "name":"SPANS_UNKNOWN_REMOVAL",
                        "require_all":false
                    },
                    {
                        "criteria":[
                            {
                                "field":"REMOVAL_Cause",
                                "is":"Isolation"
                            }
                        ],
                        "name":"ISOLATION",
                        "require_all":false
                    }
                ]
            },
            "parameter_info":{
                "Removed_Last_10_Years":{
                    "consequence":0,
                    "do_not_combine":0,
                    "nrts":0,
                    "plot_name":"rem_last_10",
                    "removal_rate":1
                },
                "Removed_Last_5_Years":{
                    "consequence":0,
                    "do_not_combine":0,
                    "nrts":0,
                    "plot_name":"rem_last_5",
                    "removal_rate":1
                },
                "completed_repairs":{
                    "consequence":0,
                    "do_not_combine":0,
                    "nrts":0,
                    "plot_name":"repairs",
                    "removal_rate":0
                },
                "location":{
                    "consequence":1,
                    "do_not_combine":0,
                    "nrts":1,
                    "plot_name":"loc",
                    "removal_rate":0
                },
                "object_class":{
                    "consequence":1,
                    "do_not_combine":1,
                    "nrts":1,
                    "plot_name":"class",
                    "removal_rate":1
                },
                "object_type":{
                    "consequence":1,
                    "do_not_combine":0,
                    "nrts":1,
                    "plot_name":"type",
                    "removal_rate":0
                },
                "parent_object_type":{
                    "consequence":0,
                    "do_not_combine":0,
                    "nrts":0,
                    "plot_name":"nha_type",
                    "removal_rate":1
                }
            }
        },
        "class":"Reliability_Interval_Creator",
        "description":"Create reliability intervals by specifying table entries",
        "id":"calculate_intervals",
        "label":"Calculate Intervals",
        "model":"reliability_interval_model",
        "position":[
            205,
            45
        ]
    },
    {
        "attrs":{
            "additional_r_parameters":{
                "make_plots":false,
                "min_interval_time":0.1,
                "plot_dir":"./plots/",
                "specific_param_combos":[]
            },
            "script_file":"reliability_distribution_creator.R"
        },
        "class":"Reliability_Distribution_Creator",
        "description":"Fit reliability distributions",
        "id":"calculate_distributions",
        "label":"Calculate Distributions",
        "model":"reliability_distribution_model",
        "position":[
            385,
            45
        ]
    },
    {
        "attrs":{
            "additional_r_parameters":{
                "alpha":0.05,
                "min_interval_time":0.1,
                "number_simulations":15000
            },
            "db_class_preference":"RMySQL",
            "local_script":"True",
            "script_file":"weibull_quantile_table.R"
        },
        "class":"R",
        "custom_model":true,
        "description":"Estimate confidence intervals for regular quantiles of the most-generic Weibull distribution using all data.  Default is 95% confidence intervals, but you can adjust alpha in additional_r_parameters.",
        "id":"weibull_quantile_cis",
        "label":"Weibull Quantile CIs",
        "model":"8d41847f-1f54-4311-ad92-a2ff406d1d3f",
        "position":[
            550,
            115
        ]
    },
    {
        "class":"Python",
        "description":"Plot causal events and MLE fit.",
        "id":"weibull_plots",
        "label":"Weibull Plots",
        "position":[
            1105,
            115
        ]
    },
    {
        "attrs":{
            "query_list":[
                "SELECT tow.id, tow.Work_Unit_Code, tow.TOW, IFNULL(tow.REMOVAL_Cause, 'Unknown'), i.causal Causal, tow.Removed_Last_5_Years, tow.Removed_Last_10_Years FROM remove_disqualified_add_covariates tow JOIN `interval` i ON i.source_id = tow.id WHERE TOW > 0.1"
            ]
        },
        "class":"SQL",
        "custom_model":true,
        "description":"Select data for interval plots. Treat isolations as causal so they show up in the plots, even though they're treated as suspensions for Weibull calculations.",
        "id":"interval_data_for_plots",
        "label":"Interval Data for Plots",
        "model":"fbbb408f-39cd-4d71-8b81-966bdccdc323",
        "position":[
            550,
            230
        ]
    },
    {
        "attrs":{
            "additional_parameters":{
                "causal_only":1,
                "removal_cause_column":"REMOVAL_Cause",
                "user_bucket_num":8,
                "work_unit_code":"5114K"
            },
            "timeout":15
        },
        "class":"Python",
        "description":"Run a python script resulting in Bokeh visualizations of TOW Intervals by Removal Cause.",
        "id":"interval_plots",
        "label":"Interval Plots",
        "position":[
            715,
            230
        ]
    },
    {
        "attrs":{
            "additional_parameters":{
                "Y":0.15,
                "max_range":0.3
            }
        },
        "class":"Python",
        "custom_model":true,
        "description":"Test if the height of confidence interval around weibull curve (measured in unreliability, 0 to 1) is too great.  Accepts two parameters, Y: the test is performed by measuring CI height at two estimated quantiles: Y and 1-Y (e.g. 0.15 and 0.85) max_range: the maximum allowable height of the CI at either Y or 1-Y.",
        "id":"range_check",
        "label":"Range Check",
        "model":"f665edbe-3c19-49af-bdda-1ac3dfd9b20a",
        "position":[
            715,
            140
        ]
    },
    {
        "attrs":{
            "additional_parameters":{
                "Quantile_Cutoff":0,
                "X":75
            }
        },
        "class":"Python",
        "custom_model":true,
        "description":"Run a python script.",
        "id":"domain_check",
        "label":"Domain Check",
        "model":"4f7fde47-fb01-41e4-9d8a-0410d4d7b5cb",
        "position":[
            715,
            185
        ]
    },
    {
        "attrs":{
            "query_list":[
                "SELECT now() fit_date, (SELECT DATE_FORMAT(DATE_ADD(MAX(REMOVAL_Transaction_Date), INTERVAL 1 MONTH), '%Y-%m-01') start_forecast_date from calculate_tow) forecast_start_date, rd.id distribution_id, rd.interval_parameter_set_id, IFNULL(GROUP_CONCAT(DISTINCT class.name  SEPARATOR ' '),  'Any WUC') WUC, IFNULL(GROUP_CONCAT(DISTINCT nha_pn.name  SEPARATOR ' '),  'Any MDS') MDS, IFNULL(GROUP_CONCAT(DISTINCT time_frame.name  SEPARATOR ' '),  'Since 04') TIME_FRAME, rd.distribution_mean, rd.causal_events, rd.censored_events, rd.log_likelihood, rd.anderson_darling_adj, rd.ks_stat, rd.beta_eq_one_pval, dt.name dist_name, rdp.pv1 eta, rdp.se1 eta_se, COALESCE(rdp.pv2, 1) beta, rdp.se2 beta_se FROM reliability_distribution rd LEFT JOIN (SELECT ips.id ips_id, pv.value name FROM interval_parameter_set ips JOIN interval_parameter_set_map ipsm ON ipsm.interval_parameter_set_id = ips.id JOIN parameter_value pv ON pv.id = ipsm.parameter_value_id JOIN parameter p ON p.id = pv.parameter_id WHERE p.name = 'object_class') class ON class.ips_id = rd.interval_parameter_set_id LEFT JOIN (SELECT ips.id ips_id, pv.value name FROM interval_parameter_set ips JOIN interval_parameter_set_map ipsm ON ipsm.interval_parameter_set_id = ips.id JOIN parameter_value pv ON pv.id = ipsm.parameter_value_id JOIN parameter p ON p.id = pv.parameter_id WHERE p.name = 'parent_object_type') nha_pn ON nha_pn.ips_id = rd.interval_parameter_set_id LEFT JOIN (SELECT ips.id ips_id, p.name FROM interval_parameter_set ips JOIN interval_parameter_set_map ipsm ON ipsm.interval_parameter_set_id = ips.id JOIN parameter_value pv ON pv.id = ipsm.parameter_value_id JOIN parameter p ON p.id = pv.parameter_id WHERE p.name in ('Removed_Last_5_Years', 'Removed_Last_10_Years') AND pv.value = 1) time_frame ON time_frame.ips_id = rd.interval_parameter_set_id LEFT JOIN distribution_type dt ON dt.id = rd.distribution_type_id LEFT JOIN (SELECT rdp1.reliability_distribution_id,  rdp1.parameter_value pv1,  rdp1.standard_error se1,  rdp2.parameter_value pv2,  rdp2.standard_error se2 FROM (SELECT  reliability_distribution_id, parameter_value, standard_error  FROM  reliability_distribution_parameter rdp  JOIN distribution_type_parameter dtp ON dtp.id = rdp.distribution_type_parameter_id  WHERE  dtp.parameter_number = 1) rdp1  LEFT JOIN (SELECT  reliability_distribution_id, parameter_value, standard_error  FROM  reliability_distribution_parameter rdp  JOIN distribution_type_parameter dtp ON dtp.id = rdp.distribution_type_parameter_id  WHERE  dtp.parameter_number = 2) rdp2 ON rdp1.reliability_distribution_id = rdp2.reliability_distribution_id) rdp ON rdp.reliability_distribution_id = rd.id WHERE  dt.name IS NOT NULL  AND rd.interval_parameter_set_id NOT IN (  SELECT  ips.id ips_id  FROM  interval_parameter_set ips  JOIN interval_parameter_set_map ipsm ON ipsm.interval_parameter_set_id = ips.id  JOIN parameter_value pv ON pv.id = ipsm.parameter_value_id  JOIN parameter p ON p.id = pv.parameter_id  WHERE  p.name in ('Removed_Last_5_Years', 'Removed_Last_10_Years') GROUP BY ips.id HAVING sum(pv.value) <> 1 OR count(pv.value) > 1) GROUP BY rd.id, interval_parameter_set_id , dt.name, rdp.pv1, rdp.se1, rdp.pv2, rdp.se2"
            ]
        },
        "class":"SQL",
        "custom_model":true,
        "description":"Convert distributions into a flat table and filter out unwanted distributions.",
        "id":"denormalize_distributions",
        "label":"Denormalize Distributions",
        "model":"cc1e1d81-b31c-4983-ba14-74ed4dc628f2",
        "position":[
            550,
            45
        ]
    },
    {
        "class":"Stager",
        "custom_model":true,
        "description":"Maintain a copy of all previously-generated predictive twins.",
        "id":"weibull_archive",
        "label":"Weibull Archive",
        "model":"51b4aa7d-b057-452c-8535-1060961e0f0c",
        "position":[
            1105,
            165
        ]
    },
    {
        "class":"DataExporter",
        "description":"Export all or a subset of rows contained in a table.",
        "id":"export_weibulls",
        "label":"Export Weibulls",
        "position":[
            1105,
            215
        ]
    },
    {
        "attrs":{
            "additional_parameters":{
                "preferred_distributions":[]
            }
        },
        "class":"Python",
        "custom_model":true,
        "description":"Identify distributions worth using.",
        "id":"classify_distributions",
        "label":"Classify Distributions",
        "model":"db457bf6-a372-4078-b2bd-f3c2a0c77f92",
        "position":[
            885,
            45
        ]
    },
    {
        "class":"SharedViewImport",
        "description":"\n        Consumes data provided by a workspace from a SharedView component.\n        ",
        "id":"remove_disqualified_add_covariates",
        "label":"Remove Disqualified Add Covariates",
        "position":[
            40,
            45
        ]
    },
    {
        "class":"SharedViewImport",
        "description":"\n        Consumes data provided by a workspace from a SharedView component.\n        ",
        "id":"three_month_fh_collector",
        "label":"Three Month FH Collector",
        "position":[
            40,
            185
        ]
    },
    {
        "class":"SharedViewImport",
        "description":"\n        Consumes data provided by a workspace from a SharedView component.\n        ",
        "id":"calculate_tow",
        "label":"Calculate TOW",
        "position":[
            40,
            125
        ]
    },
    {
        "class":"SharedView",
        "description":"Provides data to a child workspace.",
        "id":"share_classified_distributions",
        "label":"Share Classified Distributions",
        "model":"empty",
        "position":[
            1105,
            45
        ]
    }
]